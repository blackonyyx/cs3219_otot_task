# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
#https://www.linkedin.com/pulse/create-cicd-pipeline-google-app-engine-github-actions-samuel-ichinga/?trk=public_profile_article_view

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_backend:

    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./backend/
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3 # clones and enters repo
    
    - name: Load Configuration File
      run: |
        cd backend
        echo "${{secrets.DOTENV_CONFIG}}" | base64 --decode > .env
        echo "${{secrets.GCP_SA_KEY}}" > united-perigee-318916-407034b16ebf.json
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3 # clones parallet matrix of node versions
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json' # THIS PATTERN did the trick for me.
    - run: |
        cd backend
        npm run build --if-present
    
    - uses: nick-fields/retry@v2 # retrys npm testing 3 times
      with:
        timeout_minutes: 5
        max_attempts: 10
        retry_wait_seconds: 15
    - run: |
        cd backend
        npm test

  deploy-backend:
    needs: build_backend
    
    runs-on: ubuntu-latest
    defaults:
      run: # run subsequent functions in ./backend 
        working-directory: ./backend
        
    steps: 
    - uses: actions/checkout@v3 # clones and enters repo
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
          project_id: ${{secrets.GCP_PROJECT}}
          service_account_key: ${{secrets.GCP_SA_KEY}}
    
    - name: Deploy
      uses: google-github-actions/deploy-appengine@v0
      with:
        deliverables: app.yaml
        project_id: ${{ secrets.GCP_PROJECT }}
        credentials: ${{ secrets.GCP_SA_KEY }}
        promote: true
        version: v1
      
